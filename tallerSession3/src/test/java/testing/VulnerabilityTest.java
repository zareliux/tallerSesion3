package testing;

import clientAPI.CustomResponse;
import clientAPI.FactoryRequest;
import helper.JsonHelper;
import io.qameta.allure.*;
import io.qameta.allure.junit4.DisplayName;
import org.json.JSONException;
import org.junit.After;
import org.junit.Test;

import static helper.EndPointOwasp.*;

public class VulnerabilityTest {
    String idScan;
    final String STATUS_PROPERTY="status";
    final String SCAN_PROPERTY="scan";

    @Test
    @DisplayName("Verify the vulnerabilty test")
    @Description("This test case is to verify that i can create an user and do the login in the same time")
    @Epic("Login")
    @Feature("Security Authetication")
    @Link("www.jira.com/SFSF3333")
    @Severity(SeverityLevel.BLOCKER)
    @Issue("SFTT888")
    public void runVulnerabilityTest() throws JSONException, InterruptedException {
        this.startScannerOWASP();
        this.monitoringScannerOWASP(this.idScan);
    }


    @Attachment(value="{0}",type="text/html")
    public String attachHTML(String name,String htmlReport){
        return htmlReport;
    }

    @After
    public void generateReport(){
        CustomResponse response =FactoryRequest.make(FactoryRequest.GET).send(OWASP_HOST+GENERATE_HTML_REPORT,"");
        this.attachHTML("OWASP Detail Report HTML",response.getResponseBody());
        response =FactoryRequest.make(FactoryRequest.GET).send(OWASP_HOST+TYPE_ATTAKS+this.idScan,"");
        this.attachHTML("OWASP Types Attack HTML",response.getResponseBody());
    }

    @Step("Start Scanner OWASP ZAP")
    public void startScannerOWASP() throws JSONException {
        CustomResponse response =FactoryRequest.make(FactoryRequest.GET).send(OWASP_HOST+START_VULNERABILITY,"");
        this.idScan=JsonHelper.getJSONValue(JsonHelper.convertToJSON(response.getResponseBody()),SCAN_PROPERTY);
        System.out.println("ID SCAN : "+this.idScan);
    }

    @Step("Monitoring Current Scanner Process OWASP")
    public void monitoringScannerOWASP(String id) throws InterruptedException, JSONException {
        String isCompleted="";
        while (!isCompleted.equals("100")){
            //20 segundos
            Thread.sleep(20*1000);
            CustomResponse response =FactoryRequest.make(FactoryRequest.GET).send(OWASP_HOST+GET_PROGRESS+id,"");
            isCompleted=JsonHelper.getJSONValue(JsonHelper.convertToJSON(response.getResponseBody()),STATUS_PROPERTY);
            System.out.println("PROGRESS STATUS : "+isCompleted);
        }
    }

}